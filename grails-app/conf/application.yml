server: #Luch
  port: 8080
---
info:
  app:
    name: '@info.app.name@'
    version: '@info.app.version@'
    grailsVersion: '@info.app.grailsVersion@'
grails:
  gorm:
    default:
      constraints: "'*'(nullable: true)"
    failOnError: true  #Luch
  cors:
    enabled: false #Luch
  databinding: # https://schneide.blog/2018/10/16/consistency-over-magic-please/
    convertEmptyStringsToNull: false #Luch
    trimStrings: false #Luch
  controllers:
      defaultScope: singleton
      upload:
        maxFileSize: 1073741824            #Luch
        maxRequestSize: 1073741824        #Luch
  views:
    default:
      codec: html
    gsp:
      encoding: UTF-8
      htmlcodec: xml
      codecs:
        expression: html
        scriptlet: html
        taglib: none
        staticparts: none
  mime:
    disable:
      accept:
        header:
          userAgents:
          - Gecko
          - WebKit
          - Presto
          - Trident
    types:
      all: '*/*'
      atom: application/atom+xml
      css: text/css
      csv: text/csv
      form: application/x-www-form-urlencoded
      html:
      - text/html
      - application/xhtml+xml
      js: text/javascript
      json:
      - application/json
      - text/json
      multipartForm: multipart/form-data
      pdf: application/pdf
      rss: application/rss+xml
      text: text/plain
      hal:
      - application/hal+json
      - application/hal+xml
      xml:
      - text/xml
      - application/xml
  plugin:
    springsecurity:
      rejectIfNoRule: true
      rejectPublicInvocations: false
      userLookup:
        userDomainClassName: 'com.luch.spring.security.SpringUser'
        authorityJoinClassName: 'com.luch.spring.security.SpringRole'
      authority:
        className: 'example.grails.SecurityRole'
      logout:
        postOnly: false
      rest:
        token:
          storage:
            jwt:
              secret: 'pleaseChangeThisSecretForANewOne'
      securityConfigType: "Annotation" #"InterceptUrlMap"
      filterChain:
        chainMap: [
          {pattern: '/api/**',    filters: 'JOINED_FILTERS,-anonymousAuthenticationFilter,-exceptionTranslationFilter,-authenticationProcessingFilter,-securityContextPersistenceFilter,-rememberMeAuthenticationFilter'},
          {pattern: '/**',        filters: 'JOINED_FILTERS'}
          #{pattern: '/**',        filters: 'JOINED_FILTERS,-restTokenValidationFilter,-restExceptionTranslationFilter'}
        ]
      controllerAnnotations:
        staticRules: [
          {pattern: '/',                          access: ['permitAll']},
          {pattern: '/error',                     access: ['permitAll']},
          {pattern: '/index',                     access: ['permitAll']},
          {pattern: '/index.gsp',                 access: ['permitAll']},
          {pattern: '/shutdown',                  access: ['permitAll']},
          {pattern: '/assets/**',                 access: ['permitAll']},
          {pattern: '/**/js/**',                  access: ['permitAll']},
          {pattern: '/**/css/**',                 access: ['permitAll']},
          {pattern: '/**/images/**',              access: ['permitAll']},
          {pattern: '/**/favicon.ico',            access: ['permitAll']},
          {pattern: '/login/**',                  access: ['permitAll']},
          {pattern: '/logout',                    access: ['permitAll']},
          {pattern: '/logout/**',                 access: ['permitAll']},
          {pattern: '/api/login',                 access: ['ROLE_ANONYMOUS']},
          {pattern: '/oauth/access_token',        access: ['ROLE_ANONYMOUS']},
          {pattern: '/springUser/**',             access: ['ROLE_ADMIN']},
          {pattern: '/springRole/**',             access: ['ROLE_ADMIN']},
          {pattern: '/springUserSpringRole/**',   access: ['ROLE_ADMIN']},
          #{pattern: '/api/announcements',         access: ['ROLE_BOSS'], httpMethod: 'GET'},
          #{pattern: '/api/announcements/*',       access: ['ROLE_BOSS'], httpMethod: 'GET'},
          #{pattern: '/api/announcements/*',       access: ['ROLE_BOSS'], httpMethod: 'DELETE'},
          #{pattern: '/api/announcements',         access: ['ROLE_BOSS'], httpMethod: 'POST'},
          #{pattern: '/api/announcements/*',       access: ['ROLE_BOSS'], httpMethod: 'PUT'}
          #{pattern: '/secure',                    access: ['ROLE_ADMIN']},
          #{pattern: '/secure/index',              access: ['ROLE_ADMIN']},
          #{pattern: '/fileSpreadsheetImport',               access: ['ROLE_EMPLOYEE']},
          #{pattern: '/fileSpreadsheetImport/index',         access: ['ROLE_EMPLOYEE']},
        ]
    databasemigration:
      updateOnStart: true
      updateOnStartFileName: changelog.xml
    auditLog:
      auditDomainClassName: 'org.grails.plugins.AuditTrail'

---
hibernate:
  cache:
    queries: false
    use_second_level_cache: false
    use_query_cache: false
  dialect: org.hibernate.dialect.Oracle12cDialect
dataSource:
  pooled: true
  jmxExport: true
  driverClassName: oracle.jdbc.OracleDriver
